services:
  # Redis - For event bus, caching, and sessions
  redis:
    image: redis:7-alpine
    container_name: echo-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-dev-redis-password}
    volumes:
      - redis_data:/data
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "redis-cli",
          "-h",
          "localhost",
          "-p",
          "6379",
          "-a",
          "${REDIS_PASSWORD:-dev-redis-password}",
          "ping",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # User Service - Handles authentication, user profiles
  user-service:
    build: ./services/user-service
    container_name: echo-user-service
    ports:
      - "8001:8001"
    env_file:
      - .env # Load shared variables
      - ./services/user-service/.env # Load service-specific variables (overrides shared)
    environment:
      # Override specific variables for Docker environment
      # Database points to host machine's PostgreSQL
      - DATABASE_URL=postgresql://postgres:postgres@host.docker.internal:5432/users_db

      # Redis points to redis container
      - REDIS_URL=redis://:${REDIS_PASSWORD:-dev-redis-password}@redis:6379
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    # Allow container to access host machine's PostgreSQL
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  redis_data:
    driver: local
