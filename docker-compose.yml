services:
  # Redis - For event bus, caching, and sessions
  redis:
    image: redis:7-alpine
    container_name: echo-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-dev-redis-password}
    volumes:
      - redis_data:/data
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "redis-cli",
          "-h",
          "localhost",
          "-p",
          "6379",
          "-a",
          "${REDIS_PASSWORD:-dev-redis-password}",
          "ping",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # RabbitMQ - Message broker for event-driven architecture and async processing
  rabbitmq:
    image: rabbitmq:4-management
    container_name: echo-rabbitmq
    ports:
      - "5672:5672" # AMQP protocol port
      - "15672:15672" # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-admin}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-dev-rabbitmq-password}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # User Service - Handles authentication, user profiles
  user-service:
    build: ./services/user-service
    container_name: echo-user-service
    ports:
      - "8001:8001"
    env_file:
      - .env # Load shared variables
      - ./services/user-service/.env # Load service-specific variables (overrides shared)
    environment:
      # Override specific variables for Docker environment
      # Database points to host machine's PostgreSQL
      - DATABASE_URL=postgresql://postgres:postgres@host.docker.internal:5432/users_db

      # Redis points to redis container
      - REDIS_URL=redis://:${REDIS_PASSWORD:-dev-redis-password}@redis:6379
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    # Allow container to access host machine's PostgreSQL
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Workspace-Channel Service - Handles workspaces, channels, and memberships
  workspace-channel-service:
    build: ./services/workspace-channel-service
    container_name: echo-workspace-channel-service
    ports:
      - "8002:8002"
    env_file:
      - .env # Load shared variables
      - ./services/workspace-channel-service/.env # Load service-specific variables (overrides shared)
    environment:
      # Override specific variables for Docker environment
      # Database points to host machine's PostgreSQL
      - DATABASE_URL=postgresql://postgres:postgres@host.docker.internal:5432/workspace_channels_db

      # Redis points to redis container
      - REDIS_URL=redis://:${REDIS_PASSWORD:-dev-redis-password}@redis:6379

      # RabbitMQ points to rabbitmq container
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-admin}:${RABBITMQ_PASSWORD:-dev-rabbitmq-password}@rabbitmq:5672

      # Internal service URLs
      - USER_SERVICE_URL=http://user-service:8001
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      user-service:
        condition: service_started
    restart: unless-stopped
    # Allow container to access host machine's PostgreSQL
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Message Service - Handles messages, threads, reactions, and mentions
  message-service:
    build: ./services/message-service
    container_name: echo-message-service
    ports:
      - "8003:8003"
    env_file:
      - .env # Load shared variables
      - ./services/message-service/.env # Load service-specific variables (overrides shared)
    environment:
      # Override specific variables for Docker environment
      # Database points to host machine's PostgreSQL
      - DATABASE_URL=postgresql://postgres:postgres@host.docker.internal:5432/message_db

      # Redis points to redis container
      - REDIS_URL=redis://:${REDIS_PASSWORD:-dev-redis-password}@redis:6379

      # RabbitMQ points to rabbitmq container
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-admin}:${RABBITMQ_PASSWORD:-dev-rabbitmq-password}@rabbitmq:5672

      # Internal service URLs
      - USER_SERVICE_URL=http://user-service:8001
      - WORKSPACE_CHANNEL_SERVICE_URL=http://workspace-channel-service:8002
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      user-service:
        condition: service_started
      workspace-channel-service:
        condition: service_started
    restart: unless-stopped
    # Allow container to access host machine's PostgreSQL
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
